---
layout: default
title: Cyclistic Data Analysis Code
---

# setting up packages for analysis
install.packages("tidyverse")
library("tidyverse")

library("lubridate")

library("ggplot2")

library("dplyr")

library("readr")

library("janitor")
library("skimr")

# importing the data

oct_2021_trips <- read_csv("C:/Users/natha/OneDrive/Desktop/Bikeshare Data/202110-divvy-tripdata.csv")
nov_2021_trips <- read_csv("C:/Users/natha/OneDrive/Desktop/Bikeshare Data/202111-divvy-tripdata.csv")
dec_2021_trips <- read_csv("C:/Users/natha/OneDrive/Desktop/Bikeshare Data/202112-divvy-tripdata.csv")
jan_2022_trips <- read_csv("C:/Users/natha/OneDrive/Desktop/Bikeshare Data/202201-divvy-tripdata.csv")
feb_2022_trips <- read_csv("C:/Users/natha/OneDrive/Desktop/Bikeshare Data/202202-divvy-tripdata.csv")
mar_2022_trips <- read_csv("C:/Users/natha/OneDrive/Desktop/Bikeshare Data/202203-divvy-tripdata.csv")
apr_2022_trips <- read_csv("C:/Users/natha/OneDrive/Desktop/Bikeshare Data/202204-divvy-tripdata.csv")
may_2022_trips <- read_csv("C:/Users/natha/OneDrive/Desktop/Bikeshare Data/202205-divvy-tripdata.csv")
jun_2022_trips <- read_csv("C:/Users/natha/OneDrive/Desktop/Bikeshare Data/202206-divvy-tripdata.csv")
jul_2022_trips <- read_csv("C:/Users/natha/OneDrive/Desktop/Bikeshare Data/202207-divvy-tripdata.csv")
aug_2022_trips <- read_csv("C:/Users/natha/OneDrive/Desktop/Bikeshare Data/202208-divvy-tripdata.csv")
sep_2022_trips <- read_csv("C:/Users/natha/OneDrive/Desktop/Bikeshare Data/202209-divvy-publictripdata.csv")

# checking that column names are the same
colnames(oct_2021_trips)
colnames(nov_2021_trips)
colnames(dec_2021_trips)
colnames(jan_2022_trips)
colnames(feb_2022_trips)
colnames(mar_2022_trips)
colnames(apr_2022_trips)
colnames(may_2022_trips)
colnames(jun_2022_trips)
colnames(jul_2022_trips)
colnames(aug_2022_trips)
colnames(sep_2022_trips)
# compare columns to see if they will bind by rows
compare_df_cols(oct_2021_trips,nov_2021_trips,dec_2021_trips,jan_2022_trips,feb_2022_trips,
			mar_2022_trips,apr_2022_trips,may_2022_trips,jun_2022_trips,jul_2022_trips,
			aug_2022_trips,sep_2022_trips,return = "mismatch")
# binding all the month data frames into one

all_trips <- bind_rows(oct_2021_trips,nov_2021_trips,dec_2021_trips,jan_2022_trips,feb_2022_trips,
			mar_2022_trips,apr_2022_trips,may_2022_trips,jun_2022_trips,jul_2022_trips,
			aug_2022_trips,sep_2022_trips)
# removing uneeded columns
all_trips <- all_trips %>%
	select(-c(start_lat, start_lng,end_lat,end_lng))
# updating column names to make more sense
all_trips <- all_trips %>%
				rename(bike_type=rideable_type,start_time=started_at,end_time=ended_at,
					user_type=member_casual)


# looking at the new data frame
colnames(all_trips)
nrow(all_trips)
dim(all_trips) #dimensions, num of rows and columns
head(all_trips)
str(all_trips)
summary(all_trips)
View(all_trips)
# checking subscriber types
table(all_trips$user_type)

# adding month,day, and year columns of each ride so we can aggregate by them
all_trips$date<-as.Date(all_trips$start_time)
all_trips$month<-format(as.Date(all_trips$date),"%m")
all_trips$day<-format(as.Date(all_trips$date),"%d")
all_trips$year<-format(as.Date(all_trips$date),"%Y")
all_trips$day_of_week<-format(as.Date(all_trips$date),"%A")

# add a ride_length calculation since there is no trip duration column
all_trips$ride_length<-difftime(all_trips$end_time,all_trips$start_time)
# check structure of the columns
str(all_trips)
#convert ride_length from factor to numeric in order to run calculations
is.factor(all_trips$ride_length)
typeof(all_trips$ride_length)
all_trips$ride_length<-as.numeric(as.character(all_trips$ride_length))
is.numeric(all_trips$ride_length)

# take out wrong data, negative ride_length and bikes that were removed for quality checks
all_trips_v2 <- all_trips[!(all_trips$start_station_name == "HQ QR" | all_trips$ride_length<0),]
# remove all na values
all_trips_v3<-na.omit(all_trips_v2)
# analysis on ride_length
summary(all_trips_v3$ride_length)


# compare members vs casual riders
aggregate(all_trips_v3$ride_length~all_trips_v3$user_type,FUN=mean)
aggregate(all_trips_v3$ride_length~all_trips_v3$user_type,FUN=median)
aggregate(all_trips_v3$ride_length~all_trips_v3$user_type,FUN=max)
aggregate(all_trips_v3$ride_length~all_trips_v3$user_type,FUN=min)
# comparing average ride times between members vs casual
aggregate(all_trips_v3$ride_length~all_trips_v3$user_type+all_trips_v3$day_of_week,FUN=mean)
# put the days of the week in order for analysis
all_trips_v3$day_of_week <- ordered(all_trips_v3$day_of_week,levels=c("Sunday","Monday",
						"Tuesday","Wednesday","Thursday","Friday","Saturday"))
# compare average ride times for each day with days in order now
aggregate(all_trips_v3$ride_length~all_trips_v3$user_type+all_trips_v3$day_of_week,FUN=mean)
 
#analyze number of rides perday and average duration of rides by usertype and weekday
all_trips_v3%>%
		mutate(weekday=wday(start_time,label=TRUE))%>%
			group_by(user_type,weekday)%>%
				summarise(number_of_rides=n(),average_duration=mean(ride_length))%>%
					arrange(user_type,weekday)

# visualize num of rides by usertype and weekday	
all_trips_v3%>%
		mutate(weekday=wday(start_time,label=TRUE))%>%
			group_by(user_type,weekday)%>%
				summarise(number_of_rides=n(),average_duration=mean(ride_length))%>%
					arrange(user_type,weekday)%>%
						ggplot(aes(x = weekday, y = number_of_rides, fill = user_type)) +
  						geom_col(position = "dodge")


# visualize average duration by usertype and weekday
all_trips_v3 %>% 
  mutate(weekday = wday(start_time, label = TRUE)) %>% 
  group_by(user_type, weekday) %>% 
  summarise(number_of_rides = n(),average_duration = mean(ride_length)) %>% 
  arrange(user_type, weekday)  %>% 
  ggplot(aes(x = weekday, y = average_duration, fill = user_type)) +
  geom_col(position = "dodge")
# export file
write.csv(all_trips_v3,"C:/Users/natha/OneDrive/Desktop/Bikeshare Data/avg_ride_length.csv")

		


